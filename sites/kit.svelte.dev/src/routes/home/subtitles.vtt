WEBVTT

00:00:00.000 --> 00:00:01.920
 [Scott Tolinski] Eu queria partilhá-la imediatamente.

00:00:01.920 --> 00:00:04.240
 Eu queria construir mais coisas com ela.

00:00:04.240 --> 00:00:05.640
 [James Q Quick] Eu amo-a.

00:00:05.640 --> 00:00:07.080
 [Fireship] É a única abstração de JavaScript

00:00:07.080 --> 00:00:08.640
 que é realmente agradável de usar.

00:00:08.640 --> 00:00:10.540
 [Ben McCann] Svelte introduziu uma nova ergonomia

00:00:10.540 --> 00:00:13.160
 para construir uma aplicação que tornou mais divertida

00:00:13.160 --> 00:00:15.440
 e mais fácil do que tem sido num longo prazo.

00:00:15.440 --> 00:00:18.720
 E a maneira que isto é feito é introduzindo

00:00:18.720 --> 00:00:22.360
 este conceito de gerar código reativo em momento da compilação.

00:00:22.360 --> 00:00:25.560
 [Scott Tolinski] O que a Svelte permite-nos fazer é escrever código

00:00:25.560 --> 00:00:29.400
 que não é apenas pequeno e simples, mas claro e legível.

00:00:29.400 --> 00:00:32.760
 [Amelia Wattenberger] Estás na maior parte das vezes a olhar para a HTML,

00:00:32.760 --> 00:00:34.760
 CSS e JavaScript básicos.

00:00:34.760 --> 00:00:37.120
 [Aliza Aufrichtig] A coisa que eu gosto mais sobre uso da Svelte

00:00:37.120 --> 00:00:39.200
 é o quão rápido podes avançar.

00:00:39.200 --> 00:00:42.400
 [Moritz Stefaner] E quando eu descobri a Svelte, respondi,

00:00:42.400 --> 00:00:44.800
 oh, cá está uma maneira muito simples de fazer as coisas.

00:00:44.800 --> 00:00:47.480
 [Shawn Wang] Tu de fato não precisas desta toda maquinaria

00:00:47.480 --> 00:00:49.120
 para fazer componentes corretamente.

00:00:49.120 --> 00:00:51.640
 Eu olhei para a minha experiência com a React até aqui —

00:00:51.640 --> 00:00:55.120
 Eu não poderia ser em lugar nenhum tão produtivo quanto poderia ser na Svelte.

00:00:55.120 --> 00:00:57.520
 E é quando comecei a considerá-la seriamente.

00:00:57.520 --> 00:00:59.800
 [Amelia Wattenberger] Existe bastante uso estes dias

00:00:59.800 --> 00:01:02.680
 e satisfação continua, eu acho, a mais elevada

00:01:02.680 --> 00:01:05.920
 ou uma das mais elevadas para algumas das maiores

00:01:05.920 --> 00:01:08.120
 ou mais usadas abstrações de JavaScript.

00:01:08.120 --> 00:01:10.040
 [Guillermo Rauch] Quando escreves a tua aplicação,

00:01:10.040 --> 00:01:13.160
 estás a torná-la rápida por construção.

00:01:13.160 --> 00:01:14.880
 É quase impossível criar uma aplicação lenta

00:01:14.880 --> 00:01:17.200
 e acho que a Svelte tem uma incrível vantagem aqui.

00:01:17.200 --> 00:01:18.360
 As pessoas amam a Svelte.

